# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11NLO00AOMK1NhZNxGFYb78G4htCRV5iE
"""

!pip install streamlit==1.28.1
import streamlit as st
import joblib
import pandas as pd

# Load the trained model
model = joblib.load('AI_PREDICTIVE_MODEL_FOR_CREDIT_UNDERWRITING.pkl')

# Define the prediction function
def predict_default(input_data):
    # Convert input data to a DataFrame
    df = pd.DataFrame([input_data])
    # Get prediction
    prediction = model.predict(df)[0]
    return "Default" if prediction == 1 else "No Default"

# Streamlit app
st.title("AI Predictive Model for Loan Default Prediction")

# Create input fields for loan details
st.sidebar.header("Input Loan Details")
person_age = st.sidebar.number_input("Person Age", min_value=18, max_value=100, value=30)
person_income = st.sidebar.number_input("Person Income", min_value=0, value=50000)
person_home_ownership = st.sidebar.selectbox("Home Ownership", ["RENT", "MORTGAGE", "OWN", "OTHER"])
person_emp_length = st.sidebar.number_input("Employment Length (Years)", min_value=0.0, value=5.0)
loan_amnt = st.sidebar.number_input("Loan Amount", min_value=1000, value=20000)
loan_int_rate = st.sidebar.number_input("Interest Rate (%)", min_value=0.0, max_value=100.0, value=10.5)
loan_intent = st.sidebar.selectbox("Loan Intent", ["PERSONAL", "EDUCATION", "MEDICAL", "VENTURE", "HOMEIMPROVEMENT", "DEBTCONSOLIDATION"])
loan_grade = st.sidebar.selectbox("Loan Grade", ["A", "B", "C", "D", "E", "F", "G"])
cb_person_default_on_file = st.sidebar.selectbox("Default on File", ["Y", "N"])
cb_person_cred_hist_length = st.sidebar.number_input("Credit History Length", min_value=0, value=10)

# Prepare the input for prediction
input_data = {
    "person_age": person_age,
    "person_income": person_income,
    "person_home_ownership": person_home_ownership,
    "person_emp_length": person_emp_length,
    "loan_amnt": loan_amnt,
    "loan_int_rate": loan_int_rate,
    "loan_intent": loan_intent,
    "loan_grade": loan_grade,
    "cb_person_default_on_file": cb_person_default_on_file,
    "cb_person_cred_hist_length": cb_person_cred_hist_length
}

# Predict and display the result
if st.button("Predict Loan Default"):
    result = predict_default(input_data)
    st.success(f"The loan is predicted to: {result}")